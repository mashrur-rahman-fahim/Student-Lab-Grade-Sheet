using System;
using System.Drawing;
using System.Windows.Forms;

namespace StudentLabGradeSheet
{
    public static class ModernTheme
    {
        // Color Palette
        public static readonly Color PrimaryColor = Color.FromArgb(0, 123, 255);        // Modern Blue
        public static readonly Color PrimaryDark = Color.FromArgb(0, 86, 179);          // Darker Blue
        public static readonly Color SecondaryColor = Color.FromArgb(108, 117, 125);    // Gray
        public static readonly Color SuccessColor = Color.FromArgb(40, 167, 69);        // Green
        public static readonly Color DangerColor = Color.FromArgb(220, 53, 69);         // Red
        public static readonly Color WarningColor = Color.FromArgb(255, 193, 7);        // Yellow
        public static readonly Color InfoColor = Color.FromArgb(23, 162, 184);          // Cyan
        public static readonly Color LightColor = Color.FromArgb(248, 249, 250);        // Light Gray
        public static readonly Color DarkColor = Color.FromArgb(52, 58, 64);            // Dark Gray
        public static readonly Color BackgroundColor = Color.FromArgb(255, 255, 255);   // White
        public static readonly Color CardBackground = Color.FromArgb(248, 249, 250);    // Light Card
        public static readonly Color BorderColor = Color.FromArgb(222, 226, 230);       // Light Border
        public static readonly Color TextColor = Color.FromArgb(33, 37, 41);            // Dark Text
        public static readonly Color TextMuted = Color.FromArgb(108, 117, 125);         // Muted Text

        // Fonts
        public static readonly Font HeaderFont = new Font("Segoe UI", 24F, FontStyle.Bold);
        public static readonly Font SubHeaderFont = new Font("Segoe UI", 18F, FontStyle.Bold);
        public static readonly Font TitleFont = new Font("Segoe UI", 16F, FontStyle.Bold);
        public static readonly Font BodyFont = new Font("Segoe UI", 11F, FontStyle.Regular);
        public static readonly Font ButtonFont = new Font("Segoe UI", 10F, FontStyle.Bold);
        public static readonly Font SmallFont = new Font("Segoe UI", 9F, FontStyle.Regular);

        // Apply modern styling to buttons
        public static void StyleButton(Button button, Color backgroundColor, Color textColor, bool isPrimary = false)
        {
            button.BackColor = backgroundColor;
            button.ForeColor = textColor;
            button.Font = ButtonFont;
            button.FlatStyle = FlatStyle.Flat;
            button.FlatAppearance.BorderSize = 0;
            button.FlatAppearance.BorderColor = backgroundColor;
            button.Cursor = Cursors.Hand;
            button.Padding = new Padding(15, 8, 15, 8);
            
            if (isPrimary)
            {
                button.Height = 40;
                button.FlatAppearance.MouseOverBackColor = PrimaryDark;
                button.FlatAppearance.MouseDownBackColor = Color.FromArgb(0, 70, 145);
            }
            else
            {
                button.Height = 35;
            }

            // Rounded corners effect
            button.Region = new Region(CreateRoundedRectangle(button.ClientRectangle, 6));
        }

        // Apply modern styling to text boxes
        public static void StyleTextBox(TextBox textBox, bool isPassword = false)
        {
            textBox.Font = BodyFont;
            textBox.BorderStyle = BorderStyle.FixedSingle;
            textBox.BackColor = BackgroundColor;
            textBox.ForeColor = TextColor;
            textBox.Height = 35;
            textBox.Padding = new Padding(10);
            
            if (isPassword)
                textBox.UseSystemPasswordChar = true;
        }

        // Apply modern styling to labels
        public static void StyleLabel(Label label, Font font, Color color)
        {
            label.Font = font;
            label.ForeColor = color;
            label.BackColor = Color.Transparent;
        }

        // Apply modern styling to panels
        public static void StylePanel(Panel panel, Color backgroundColor, bool hasBorder = false)
        {
            panel.BackColor = backgroundColor;
            if (hasBorder)
            {
                panel.BorderStyle = BorderStyle.FixedSingle;
                panel.Padding = new Padding(20);
            }
        }

        // Apply modern styling to DataGridView
        public static void StyleDataGridView(DataGridView dgv)
        {
            dgv.BackgroundColor = BackgroundColor;
            dgv.BorderStyle = BorderStyle.None;
            dgv.CellBorderStyle = DataGridViewCellBorderStyle.SingleHorizontal;
            dgv.GridColor = BorderColor;
            dgv.Font = BodyFont;
            dgv.RowHeadersVisible = false;
            dgv.SelectionMode = DataGridViewSelectionMode.FullRowSelect;
            dgv.MultiSelect = false;
            dgv.AllowUserToAddRows = false;
            dgv.AllowUserToDeleteRows = false;
            dgv.AllowUserToResizeRows = false;
            dgv.RowTemplate.Height = 35;

            // Header styling
            dgv.ColumnHeadersDefaultCellStyle.BackColor = LightColor;
            dgv.ColumnHeadersDefaultCellStyle.ForeColor = DarkColor;
            dgv.ColumnHeadersDefaultCellStyle.Font = new Font("Segoe UI", 10F, FontStyle.Bold);
            dgv.ColumnHeadersDefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter;
            dgv.ColumnHeadersHeight = 45;
            dgv.ColumnHeadersBorderStyle = DataGridViewHeaderBorderStyle.Single;

            // Row styling
            dgv.DefaultCellStyle.BackColor = BackgroundColor;
            dgv.DefaultCellStyle.ForeColor = TextColor;
            dgv.DefaultCellStyle.SelectionBackColor = Color.FromArgb(230, 240, 255);
            dgv.DefaultCellStyle.SelectionForeColor = TextColor;
            dgv.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter;
            dgv.DefaultCellStyle.Padding = new Padding(5);

            // Alternating row colors
            dgv.AlternatingRowsDefaultCellStyle.BackColor = Color.FromArgb(250, 250, 250);
        }

        // Apply modern styling to forms
        public static void StyleForm(Form form, string title)
        {
            form.BackColor = BackgroundColor;
            form.ForeColor = TextColor;
            form.Font = BodyFont;
            form.Text = title;
            form.StartPosition = FormStartPosition.CenterScreen;
            form.FormBorderStyle = FormBorderStyle.FixedDialog;
            form.MaximizeBox = false;
        }

        // Create rounded rectangle for buttons
        private static System.Drawing.Drawing2D.GraphicsPath CreateRoundedRectangle(Rectangle rect, int radius)
        {
            var path = new System.Drawing.Drawing2D.GraphicsPath();
            path.AddArc(rect.X, rect.Y, radius * 2, radius * 2, 180, 90);
            path.AddArc(rect.Right - radius * 2, rect.Y, radius * 2, radius * 2, 270, 90);
            path.AddArc(rect.Right - radius * 2, rect.Bottom - radius * 2, radius * 2, radius * 2, 0, 90);
            path.AddArc(rect.X, rect.Bottom - radius * 2, radius * 2, radius * 2, 90, 90);
            path.CloseFigure();
            return path;
        }

        // Gradient background for forms
        public static void ApplyGradientBackground(Form form)
        {
            form.Paint += (sender, e) =>
            {
                var brush = new System.Drawing.Drawing2D.LinearGradientBrush(
                    form.ClientRectangle,
                    Color.FromArgb(240, 245, 255),
                    Color.FromArgb(255, 255, 255),
                    System.Drawing.Drawing2D.LinearGradientMode.Vertical);
                e.Graphics.FillRectangle(brush, form.ClientRectangle);
                brush.Dispose();
            };
        }
    }
}